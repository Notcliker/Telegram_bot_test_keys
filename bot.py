"""
üîß –ù–∞–∑–≤–∞–Ω–∏–µ: ü§ñ –ê–≤—Ç–æ-–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¢–µ—Å—Ç-–ö–µ–π—Å–æ–≤ Telegram-–±–æ—Ç 
üë§ –ê–≤—Ç–æ—Ä: Metiso4kas
üìÖ –ò—é–Ω—å 2025
üíº –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: Telegram —é–æ—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç-–∫–µ–π—Å–æ–≤
üõ° –õ–∏—Ü–µ–Ω–∑–∏—è: MIT

## üìú –û—Ç–∫–∞–∑ –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏

- üõ†Ô∏è –î–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è —É—á–µ–±–Ω—ã—Ö –∏ –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π.
- üë§ –ê–≤—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–µ—Å—ë—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ª—é–±—ã–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.
- ‚ùå –ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–∞."

üì¢ –û—Ç–∫–∞–∑ –æ—Ç —Å–≤—è–∑–∏ —Å Telegram

–î–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏ –Ω–µ –∞—Ñ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω —Å Telegram.  
Telegram –∏ –ª–æ–≥–æ—Ç–∏–ø Telegram —è–≤–ª—è—é—Ç—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–Ω—ã–º–∏ –∑–Ω–∞–∫–∞–º–∏ –∏—Ö –ø—Ä–∞–≤–æ–æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–π.  
–ü—Ä–æ–µ–∫—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –æ—Ç–∫—Ä—ã—Ç–æ–µ Telegram Bot API —Å–æ–≥–ª–∞—Å–Ω–æ [–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏](https://core.telegram.org/bots/api).
–û–Ω –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –ø—Ä–æ–¥—É–∫—Ç–æ–º Telegram Inc.

"""
import telebot
import re
from config import BOT_TOKEN
from ollama_gen import generate_test_cases
from file_writer import save_to_xlsx, save_to_pdf

bot = telebot.TeleBot(BOT_TOKEN)

def remove_think_block(text: str) -> str:
    """–£–¥–∞–ª—è–µ—Ç –±–ª–æ–∫ <think>...</think> –∏–∑ –æ—Ç–≤–µ—Ç–∞ –º–æ–¥–µ–ª–∏."""
    return re.sub(r"<think>.*?</think>", "", text, flags=re.DOTALL).strip()

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! üß™ –û—Ç–ø—Ä–∞–≤—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞, –∏ —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ—Å—Ç-–∫–µ–π—Å—ã.")

@bot.message_handler(func=lambda m: True)
def handle_description(message):
    description = message.text.strip()
    bot.send_message(message.chat.id, "‚úçÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ—Å—Ç-–∫–µ–π—Å—ã –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é‚Ä¶")

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç <think>...</think>
    raw_cases = generate_test_cases(description)
    cases = remove_think_block(raw_cases)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª—ã
    xlsx_path = save_to_xlsx(cases)
    pdf_path = save_to_pdf(cases)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(message.chat.id, "‚úÖ –ì–æ—Ç–æ–≤–æ! –í–æ—Ç —Ç–≤–æ–∏ —Ç–µ—Å—Ç-–∫–µ–π—Å—ã:")
    with open(xlsx_path, 'rb') as xlsx_file:
        bot.send_document(message.chat.id, xlsx_file, caption="üìä .xlsx")
    with open(pdf_path, 'rb') as pdf_file:
        bot.send_document(message.chat.id, pdf_file, caption="üìë .pdf")

if __name__ == '__main__':
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω, –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π‚Ä¶")
    bot.polling()
